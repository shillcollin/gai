name: python-sandbox
version: "1.0.0"
summary: Run short Python snippets inside an isolated container
instructions: |
  You operate inside an Alpine container with /bin/sh and bash available.
  Use the `sandbox_exec` tool for every command you run. Prefer simple /bin/sh-compatible commands or
  short `python3 -c` snippets to generate files; avoid complex heredocs or bash-only flags that can break
  in POSIX shells.
  Always capture stdout and stderr, run the generated program, and report the output succinctly.
  Install additional packages only when the user explicitly requests them.
tools:
  - name: sandbox_exec
    description: Execute shell commands inside the sandbox
sandbox:
  warm: true
  prewarm:
    - name: install-shell-and-python
      command: ["apk", "add", "--no-cache", "bash", "python3", "py3-pip"]
  workspace_dir: ./workspace
  session:
    runtime:
      backend: dagger
      image: alpine:3.19
      workdir: /workspace
    filesystem:
      templates:
        - path: /workspace/.pythonstartup
          contents: |
            import sys
            print("Python sandbox ready", file=sys.stderr)
          mode: 0644
    limits:
      timeout: 30s
      cpu_seconds: 20
      memory_bytes: 268435456
      disk_bytes: 52428800
      network_access: false
evaluations:
  - name: python-available
    command: ["python3", "-c", "print('ready')"]
    expect_exit: 0
